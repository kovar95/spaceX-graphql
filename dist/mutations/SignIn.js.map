{"version":3,"file":"SignIn.js","sourceRoot":"/","sources":["mutations/SignIn.ts"],"names":[],"mappings":";;;;;AAAA,qCAAwD;AACxD,2DAA0C;AAC1C,0DAAkC;AAElC,kBAAe;IACb,IAAI,EAAE,IAAI,wBAAc,CAAC,cAAW,CAAC;IACrC,IAAI,EAAE;QACJ,QAAQ,EAAE,EAAE,IAAI,EAAE,IAAI,wBAAc,CAAC,uBAAa,CAAC,EAAE;KACtD;IACD,KAAK,CAAC,OAAO,CAAC,CAAU,EAAE,EAAE,QAAQ,EAAwB;QAC1D,MAAM,YAAY,GAAG,MAAM,cAAI,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;QAE5D,IAAI,YAAY,EAAE;YAChB,OAAO,YAAY,CAAC;SACrB;aAAM;YACL,MAAM,OAAO,GAAG,IAAI,cAAI,CAAC;gBACvB,IAAI;gBACJ,iBAAiB,EAAE,EAAE;aACtB,CAAC,CAAC;YACH,OAAO,MAAM,OAAO,CAAC,IAAI,EAAE,CAAC;SAC7B;IACH,CAAC;CACF,CAAC","sourcesContent":["import { GraphQLNonNull, GraphQLString } from \"graphql\";\nimport GraphQLUser from \"../outputs/User\";\nimport User from \"../models/user\";\n\nexport default {\n  type: new GraphQLNonNull(GraphQLUser),\n  args: {\n    userName: { type: new GraphQLNonNull(GraphQLString) },\n  },\n  async resolve(_: unknown, { userName }: { userName: string }) {\n    const existingUser = await User.findOne({ name: userName });\n\n    if (existingUser) {\n      return existingUser;\n    } else {\n      const newUser = new User({\n        name,\n        favouriteMissions: [],\n      });\n      return await newUser.save();\n    }\n  },\n};\n"]}